@page "/ticket"
@using Estagio.Services
@inject TicketService TicketService
@attribute [StreamRendering(true)]
@rendermode InteractiveServer

<link href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap" rel="stylesheet" />
<link href="_content/MudBlazor/MudBlazor.min.css" rel="stylesheet" />

<PageTitle>Tickets</PageTitle>
<h1>Tickets</h1>

<div class="filter-section mt-3">
    <label for="titleSearch" class="demo-text cw-320 mb-1">Search by Code</label>
    <input type="text" id="titleSearch" class="cw-320" @bind="SearchTitle" placeholder="Search by Code..." />
    <button class="btn btn-primary mt-2" @onclick="FilterTicketsByCode">Search</button>
</div>

@if (Tickets == null)
{
    <p><em>Procure o seu ticket.</em></p>
}
else
{
    <DxGrid Data="@Tickets" CssClass="mw-1100 custom-grid">
        <Columns>
            <DxGridDataColumn Caption="Id" FieldName="Id" />
            <DxGridDataColumn Caption="Date" FieldName="Date" />
            <DxGridDataColumn Caption="Name" FieldName="Nome" />
            <DxGridDataColumn Caption="Company" FieldName="Empresa" />
            <DxGridDataColumn Caption="Email" FieldName="Email" />
            <DxGridDataColumn Caption="Phone" FieldName="Telefone" />
            <DxGridDataColumn Caption="Subject" FieldName="Assunto" />
            <DxGridDataColumn Caption="State" FieldName="Estado" />
        </Columns>
    </DxGrid>
}

@code {
    private Estagio.Services.Ticket[]? Tickets;
    private Estagio.Services.Ticket[]? allTickets;
    private string SearchTitle { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {

        var serviceTickets = await TicketService.GetTicketsAsync(DateOnly.FromDateTime(DateTime.Now));
        allTickets = serviceTickets.Select(ticket => new Estagio.Services.Ticket
            {
                Id = ticket.Id,
                Date = ticket.Date,
                Nome = ticket.Nome,
                Empresa = ticket.Empresa,
                Email = ticket.Email,
                Telefone = ticket.Telefone,
                Assunto = ticket.Assunto,
                Estado = ticket.Estado
            }).ToArray();
    }

    private void FilterTicketsByCode()
    {
        Tickets = string.IsNullOrEmpty(SearchTitle)
            ? null
            : allTickets.Where(ticket => ticket.Id.Equals(SearchTitle, StringComparison.OrdinalIgnoreCase)).ToArray();
    }
}
