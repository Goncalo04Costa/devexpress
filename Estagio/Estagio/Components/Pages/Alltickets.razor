@page "/alltickets"
@using Estagio.Services
@inject TicketService TicketService
@attribute [StreamRendering(true)]
@rendermode InteractiveServer
<link href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap" rel="stylesheet" />
<link href="_content/MudBlazor/MudBlazor.min.css" rel="stylesheet" />

<PageTitle>Tickets</PageTitle>
<h1>Tickets</h1>

@if (Tickets == null)
{
    <p><em>Carregando os tickets...</em></p>
}
else
{
    <DxGrid Data="@Tickets" CssClass="mw-1100 custom-grid">
        <Columns>
            <DxGridDataColumn Caption="Id" FieldName="Id" />
            <DxGridDataColumn Caption="Date" FieldName="Date" />
            <DxGridDataColumn Caption="Name" FieldName="Nome" />
            <DxGridDataColumn Caption="Company" FieldName="Empresa" />
            <DxGridDataColumn Caption="Email" FieldName="Email" />
            <DxGridDataColumn Caption="Phone" FieldName="Telefone" />
            <DxGridDataColumn Caption="Subject" FieldName="Assunto" />
            <DxGridDataColumn Caption="State" FieldName="Estado" />
        </Columns>
    </DxGrid>
}

@code {
    private Estagio.Services.Ticket[]? Tickets;

    protected override async Task OnInitializedAsync()
    {
        var serviceTickets = await TicketService.GetTicketsAsync(DateOnly.FromDateTime(DateTime.Now));
        Tickets = serviceTickets.Select(ticket => new Estagio.Services.Ticket
            {
                Id = ticket.Id,
                Date = ticket.Date,
                Nome = ticket.Nome,
                Empresa = ticket.Empresa,
                Email = ticket.Email,
                Telefone = ticket.Telefone,
                Assunto = ticket.Assunto,
                Estado = ticket.Estado
            }).ToArray();
    }
}
